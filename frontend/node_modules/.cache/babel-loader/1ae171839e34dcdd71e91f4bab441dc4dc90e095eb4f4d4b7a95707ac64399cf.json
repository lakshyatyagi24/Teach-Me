{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oreld\\\\git\\\\Teach-Me\\\\frontend\\\\src\\\\screens\\\\ScheduleScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScheduleScreen = () => {\n  _s();\n  var _scheduleData$, _scheduleData$2;\n  const [scheduleData, setScheduleData] = useState({\n    dates: [],\n    times: [],\n    bookings: {},\n    teacherName: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    courseId,\n    teacherId\n  } = useParams();\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      if (userInfo) {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        };\n        try {\n          setLoading(true);\n          const {\n            data\n          } = await axios.get(`/api/schedule/${courseId}/${teacherId}`, config);\n          if (data && data.length === 0) {\n            // Handle the case where the data array is empty\n            setError('No schedule available.');\n          } else {\n            // If data is received and it's not empty, set it to the state\n            setScheduleData(data);\n          }\n        } catch (err) {\n          // Handle errors like 404 or 500 here\n          setError(err.response && err.response.data.message ? err.response.data.message : err.message);\n        } finally {\n          // Stop the loading in both cases\n          setLoading(false);\n        }\n      }\n    };\n    fetchSchedule();\n  }, [courseId, teacherId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Schedule for \", (_scheduleData$ = scheduleData[0]) === null || _scheduleData$ === void 0 ? void 0 : _scheduleData$.teacherName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date / Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), (_scheduleData$2 = scheduleData[0]) === null || _scheduleData$2 === void 0 ? void 0 : _scheduleData$2.dates.map((date, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: date\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: scheduleData.map((scheduleItem, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: scheduleItem.times.map((time, timeIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [timeIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: scheduleItem.times.length,\n                children: scheduleItem.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 47\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: scheduleItem.bookings[time] ? 'Booked' : 'Available'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 27\n              }, this)]\n            }, timeIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ScheduleScreen, \"UpsnBvKx21KpLTaPhUd4Meowox4=\", false, function () {\n  return [useParams];\n});\n_c = ScheduleScreen;\nexport default ScheduleScreen;\nvar _c;\n$RefreshReg$(_c, \"ScheduleScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ScheduleScreen","_s","_scheduleData$","_scheduleData$2","scheduleData","setScheduleData","dates","times","bookings","teacherName","loading","setLoading","error","setError","courseId","teacherId","fetchSchedule","userInfo","JSON","parse","localStorage","getItem","config","headers","Authorization","token","data","get","length","err","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","map","date","index","scheduleItem","time","timeIndex","rowSpan","_c","$RefreshReg$"],"sources":["C:/Users/oreld/git/Teach-Me/frontend/src/screens/ScheduleScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst ScheduleScreen = () => {\r\n    const [scheduleData, setScheduleData] = useState({ dates: [], times: [], bookings: {}, teacherName: '' });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const { courseId, teacherId } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchSchedule = async () => {\r\n            const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n            if (userInfo) {\r\n                const config = {\r\n                    headers: {\r\n                        Authorization: `Bearer ${userInfo.token}`,\r\n                    },\r\n                };\r\n                try {\r\n                    setLoading(true);\r\n                    const { data } = await axios.get(`/api/schedule/${courseId}/${teacherId}`,config);\r\n                    if (data && data.length === 0) {\r\n                        // Handle the case where the data array is empty\r\n                        setError('No schedule available.');\r\n                      } else {\r\n                        // If data is received and it's not empty, set it to the state\r\n                        setScheduleData(data);\r\n                      }\r\n                    } catch (err) {\r\n                      // Handle errors like 404 or 500 here\r\n                      setError(err.response && err.response.data.message ? err.response.data.message : err.message);\r\n                    } finally {\r\n                      // Stop the loading in both cases\r\n                      setLoading(false);\r\n                    }\r\n            }\r\n        };\r\n    \r\n        fetchSchedule();\r\n    }, [courseId, teacherId]);\r\n\r\n    return  (\r\n        <div className=\"schedule-container\">\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : error ? (\r\n            <p>Error: {error}</p>\r\n          ) : (\r\n            <>\r\n              <h2>Schedule for {scheduleData[0]?.teacherName}</h2>\r\n              <Table striped bordered hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date / Time</th>\r\n                    {scheduleData[0]?.dates.map((date, index) => (\r\n                      <th key={index}>{date}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {scheduleData.map((scheduleItem, index) => (\r\n                    <React.Fragment key={index}>\r\n                      {scheduleItem.times.map((time, timeIndex) => (\r\n                        <tr key={timeIndex}>\r\n                          {timeIndex === 0 && <td rowSpan={scheduleItem.times.length}>{scheduleItem.date}</td>}\r\n                          <td>{time}</td>\r\n                          <td>{scheduleItem.bookings[time] ? 'Booked' : 'Available'}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default ScheduleScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}