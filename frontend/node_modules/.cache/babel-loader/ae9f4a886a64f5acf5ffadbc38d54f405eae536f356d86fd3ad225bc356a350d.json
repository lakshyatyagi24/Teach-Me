{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oreld\\\\git\\\\Teach-Me\\\\frontend\\\\src\\\\screens\\\\ScheduleScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScheduleScreen = () => {\n  _s();\n  const [schedule, setSchedule] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    courseId,\n    teacherId\n  } = useParams();\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      if (userInfo) {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        };\n        try {\n          const {\n            data\n          } = await axios.get(`/api/schedule/${courseId}/${teacherId}`, config);\n          if (data && data.slots) {\n            // Update the state to hold the slots directly\n            setSchedule(data.slots);\n          } else {\n            setError('No schedule available.');\n          }\n        } catch (err) {\n          setError(err.response && err.response.data.message ? err.response.data.message : err.message);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchSchedule();\n  }, [courseId, teacherId]);\n\n  // Function to handle class names based on booking status\n  const getClassName = booked => {\n    return booked ? 'table-danger' : 'table-success';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Schedule for Algebra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: schedule.map(slot => slot.times.map((timeSlot, timeIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: getClassName(timeSlot.booked),\n            children: [timeIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: slot.times.length,\n              children: slot.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: timeSlot.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: getClassName(timeSlot.booked),\n              children: timeSlot.booked ? 'Booked' : 'Available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 41\n            }, this)]\n          }, `${slot.date}-${timeIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ScheduleScreen, \"T2PUeqi/gl+bPrzw8L/R9v2jFkk=\", false, function () {\n  return [useParams];\n});\n_c = ScheduleScreen;\nexport default ScheduleScreen;\nvar _c;\n$RefreshReg$(_c, \"ScheduleScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ScheduleScreen","_s","schedule","setSchedule","loading","setLoading","error","setError","courseId","teacherId","fetchSchedule","userInfo","JSON","parse","localStorage","getItem","config","headers","Authorization","token","data","get","slots","err","response","message","getClassName","booked","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","map","slot","times","timeSlot","timeIndex","rowSpan","length","date","time","_c","$RefreshReg$"],"sources":["C:/Users/oreld/git/Teach-Me/frontend/src/screens/ScheduleScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst ScheduleScreen = () => {\r\n    const [schedule, setSchedule] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const { courseId, teacherId } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchSchedule = async () => {\r\n            const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n            if (userInfo) {\r\n                const config = {\r\n                    headers: {\r\n                        Authorization: `Bearer ${userInfo.token}`,\r\n                    },\r\n                };\r\n                try {\r\n                    const { data } = await axios.get(`/api/schedule/${courseId}/${teacherId}`, config);\r\n                    if (data && data.slots) {\r\n                        // Update the state to hold the slots directly\r\n                        setSchedule(data.slots);\r\n                    } else {\r\n                        setError('No schedule available.');\r\n                    }\r\n                } catch (err) {\r\n                    setError(err.response && err.response.data.message ? err.response.data.message : err.message);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n      \r\n        fetchSchedule();\r\n    }, [courseId, teacherId]);\r\n\r\n    // Function to handle class names based on booking status\r\n    const getClassName = (booked) => {\r\n        return booked ? 'table-danger' : 'table-success';\r\n    };\r\n\r\n    return (\r\n        <div className=\"schedule-container\">\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : error ? (\r\n                <p>Error: {error}</p>\r\n            ) : (\r\n                <>\r\n                    <h2>Schedule for Algebra</h2> {/* Assuming \"Algebra\" is the course name */}\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>Time</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {schedule.map(slot => (\r\n                                slot.times.map((timeSlot, timeIndex) => (\r\n                                    <tr key={`${slot.date}-${timeIndex}`} className={getClassName(timeSlot.booked)}>\r\n                                        {timeIndex === 0 && <td rowSpan={slot.times.length}>{slot.date}</td>}\r\n                                        <td>{timeSlot.time}</td>\r\n                                        <td className={getClassName(timeSlot.booked)}>\r\n                                            {timeSlot.booked ? 'Booked' : 'Available'}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScheduleScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}