{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oreld\\\\git\\\\Teach-Me\\\\frontend\\\\src\\\\screens\\\\ScheduleScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScheduleScreen = () => {\n  _s();\n  var _scheduleData$dates, _scheduleData$times;\n  const [scheduleData, setScheduleData] = useState({\n    dates: [],\n    times: [],\n    bookings: {},\n    teacherName: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    courseId,\n    teacherId\n  } = useParams();\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      if (userInfo) {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        };\n        try {\n          setLoading(true);\n          const response = await axios.get(`/api/schedule/${courseId}/${teacherId}`, config);\n          console.log('API Response:', response);\n          const {\n            data\n          } = response;\n          console.log('Data:', data);\n          // Validate data before setting state\n          const formattedData = {\n            dates: Array.isArray(data.dates) ? data.dates : [],\n            times: Array.isArray(data.times) ? data.times : [],\n            bookings: typeof data.bookings === 'object' && data.bookings !== null ? data.bookings : {},\n            teacherName: typeof data.teacherName === 'string' ? data.teacherName : ''\n          };\n          console.log(\"formattedData\", formattedData);\n          setScheduleData(formattedData);\n          setLoading(false);\n        } catch (err) {\n          console.error('Fetching Schedule Error:', err);\n          setError(err.response && err.response.data.message ? err.response.data.message : err.message);\n          setLoading(false);\n        }\n      }\n    };\n    fetchSchedule();\n  }, [courseId, teacherId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Schedule for \", scheduleData.teacherName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), (_scheduleData$dates = scheduleData.dates) === null || _scheduleData$dates === void 0 ? void 0 : _scheduleData$dates.map((date, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: date\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: (_scheduleData$times = scheduleData.times) === null || _scheduleData$times === void 0 ? void 0 : _scheduleData$times.map((time, index) => {\n            var _scheduleData$dates2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), (_scheduleData$dates2 = scheduleData.dates) === null || _scheduleData$dates2 === void 0 ? void 0 : _scheduleData$dates2.map((date, dateIndex) => {\n                var _scheduleData$booking;\n                // Determine if the time slot is booked on this date\n                const isBooked = (_scheduleData$booking = scheduleData.bookings[date]) === null || _scheduleData$booking === void 0 ? void 0 : _scheduleData$booking.includes(time);\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: isBooked ? 'booked' : 'available',\n                  children: isBooked ? 'Booked' : 'Available'\n                }, `${date}-${time}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 45\n                }, this);\n              })]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ScheduleScreen, \"oQF1UzAcPoBlIcV+DFPCbGEZx7U=\", false, function () {\n  return [useParams];\n});\n_c = ScheduleScreen;\nexport default ScheduleScreen;\nvar _c;\n$RefreshReg$(_c, \"ScheduleScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ScheduleScreen","_s","_scheduleData$dates","_scheduleData$times","scheduleData","setScheduleData","dates","times","bookings","teacherName","loading","setLoading","error","setError","courseId","teacherId","fetchSchedule","userInfo","JSON","parse","localStorage","getItem","config","headers","Authorization","token","response","get","console","log","data","formattedData","Array","isArray","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","map","date","index","time","_scheduleData$dates2","dateIndex","_scheduleData$booking","isBooked","includes","_c","$RefreshReg$"],"sources":["C:/Users/oreld/git/Teach-Me/frontend/src/screens/ScheduleScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst ScheduleScreen = () => {\r\n    const [scheduleData, setScheduleData] = useState({\r\n        dates: [],\r\n        times: [],\r\n        bookings: {},\r\n        teacherName: ''\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const { courseId, teacherId } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchSchedule = async () => {\r\n            const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n            if (userInfo) {\r\n                const config = {\r\n                    headers: {\r\n                        Authorization: `Bearer ${userInfo.token}`,\r\n                    },\r\n                };\r\n                try {\r\n                    setLoading(true);\r\n                    const response = await axios.get(`/api/schedule/${courseId}/${teacherId}`, config);\r\n                    console.log('API Response:', response);\r\n                    const { data } = response;\r\n                    console.log('Data:', data);\r\n                    // Validate data before setting state\r\n                    const formattedData = {\r\n                        dates: Array.isArray(data.dates) ? data.dates : [],\r\n                        times: Array.isArray(data.times) ? data.times : [],\r\n                        bookings: typeof data.bookings === 'object' && data.bookings !== null ? data.bookings : {},\r\n                        teacherName: typeof data.teacherName === 'string' ? data.teacherName : '',\r\n                    };\r\n                    console.log(\"formattedData\",formattedData);\r\n                    setScheduleData(formattedData);\r\n                    setLoading(false);\r\n                } catch (err) {\r\n                    console.error('Fetching Schedule Error:', err);\r\n                    setError(err.response && err.response.data.message ? err.response.data.message : err.message);\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n    \r\n        fetchSchedule();\r\n    }, [courseId, teacherId]);\r\n\r\n    return (\r\n        <div className=\"schedule-container\">\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : error ? (\r\n                <p>Error: {error}</p>\r\n            ) : (\r\n                <>\r\n                    <h2>Schedule for {scheduleData.teacherName}</h2>\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                {scheduleData.dates?.map((date, index) => (\r\n                                    <th key={index}>{date}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {scheduleData.times?.map((time, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{time}</td>\r\n                                    {scheduleData.dates?.map((date, dateIndex) => {\r\n                                        // Determine if the time slot is booked on this date\r\n                                        const isBooked = scheduleData.bookings[date]?.includes(time);\r\n                                        return (\r\n                                            <td\r\n                                                key={`${date}-${time}`}\r\n                                                className={isBooked ? 'booked' : 'available'}\r\n                                            >\r\n                                                {isBooked ? 'Booked' : 'Available'}\r\n                                            </td>\r\n                                        );\r\n                                    })}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScheduleScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}