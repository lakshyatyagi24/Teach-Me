{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oreld\\\\git\\\\Teach-Me\\\\frontend\\\\src\\\\screens\\\\AddScheduleScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddScheduleScreen = () => {\n  _s();\n  // Assuming you want to store schedules in the following format\n  const [schedules, setSchedules] = useState({});\n\n  // Helper function to generate the next week's dates\n  const getNextWeekDates = () => {\n    const dates = [];\n    const today = new Date();\n    for (let i = 1; i <= 7; i++) {\n      const nextDay = new Date(today);\n      nextDay.setDate(nextDay.getDate() + i);\n      dates.push(nextDay.toISOString().split('T')[0]); // Format to YYYY-MM-DD\n    }\n    return dates;\n  };\n\n  // Generate the dates for the next week\n  const dates = getNextWeekDates();\n  const handleTimeChange = (date, time, checked) => {\n    setSchedules(prevSchedules => {\n      const updatedSchedules = {\n        ...prevSchedules\n      };\n      if (checked) {\n        // Add the time to the list for the date\n        if (updatedSchedules[date]) {\n          updatedSchedules[date].push(time);\n        } else {\n          updatedSchedules[date] = [time];\n        }\n      } else {\n        // Remove the time from the list for the date\n        updatedSchedules[date] = updatedSchedules[date].filter(t => t !== time);\n      }\n      return updatedSchedules;\n    });\n  };\n  const submitSchedule = () => {\n    // Here you would submit the schedules to the backend\n    axios.post('/api/schedule/add', {\n      schedules\n    }).then(response => {\n      alert('Schedule added successfully!');\n      // Clear the selected schedules\n      setSchedules({});\n    }).catch(error => {\n      console.error('Failed to add the schedule:', error);\n      alert('Failed to add the schedule.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: date\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Time Slots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00'].map(time => {\n                var _schedules$date;\n                return /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  id: `default-${date}-${time}`,\n                  label: time,\n                  onChange: e => handleTimeChange(date, time, e.target.checked),\n                  checked: ((_schedules$date = schedules[date]) === null || _schedules$date === void 0 ? void 0 : _schedules$date.includes(time)) || false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this);\n              })\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: submitSchedule,\n        children: \"Submit Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AddScheduleScreen, \"tua1+GpNA0/iqxei3lxCXFTUCbU=\");\n_c = AddScheduleScreen;\nexport default AddScheduleScreen;\nvar _c;\n$RefreshReg$(_c, \"AddScheduleScreen\");","map":{"version":3,"names":["React","useState","Form","Button","Table","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AddScheduleScreen","_s","schedules","setSchedules","getNextWeekDates","dates","today","Date","i","nextDay","setDate","getDate","push","toISOString","split","handleTimeChange","date","time","checked","prevSchedules","updatedSchedules","filter","t","submitSchedule","post","then","response","alert","catch","error","console","children","bordered","hover","responsive","fileName","_jsxFileName","lineNumber","columnNumber","map","_schedules$date","Check","type","id","label","onChange","e","target","includes","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/oreld/git/Teach-Me/frontend/src/screens/AddScheduleScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Table } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst AddScheduleScreen = () => {\r\n  // Assuming you want to store schedules in the following format\r\n  const [schedules, setSchedules] = useState({});\r\n  \r\n  // Helper function to generate the next week's dates\r\n  const getNextWeekDates = () => {\r\n    const dates = [];\r\n    const today = new Date();\r\n    for (let i = 1; i <= 7; i++) {\r\n      const nextDay = new Date(today);\r\n      nextDay.setDate(nextDay.getDate() + i);\r\n      dates.push(nextDay.toISOString().split('T')[0]); // Format to YYYY-MM-DD\r\n    }\r\n    return dates;\r\n  };\r\n\r\n  // Generate the dates for the next week\r\n  const dates = getNextWeekDates();\r\n\r\n  const handleTimeChange = (date, time, checked) => {\r\n    setSchedules((prevSchedules) => {\r\n      const updatedSchedules = { ...prevSchedules };\r\n      if (checked) {\r\n        // Add the time to the list for the date\r\n        if (updatedSchedules[date]) {\r\n          updatedSchedules[date].push(time);\r\n        } else {\r\n          updatedSchedules[date] = [time];\r\n        }\r\n      } else {\r\n        // Remove the time from the list for the date\r\n        updatedSchedules[date] = updatedSchedules[date].filter((t) => t !== time);\r\n      }\r\n      return updatedSchedules;\r\n    });\r\n  };\r\n\r\n  const submitSchedule = () => {\r\n    // Here you would submit the schedules to the backend\r\n    axios.post('/api/schedule/add', { schedules })\r\n      .then((response) => {\r\n        alert('Schedule added successfully!');\r\n        // Clear the selected schedules\r\n        setSchedules({});\r\n      })\r\n      .catch((error) => {\r\n        console.error('Failed to add the schedule:', error);\r\n        alert('Failed to add the schedule.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Table bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              {dates.map((date) => (\r\n                <th key={date}>{date}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Time Slots</td>\r\n              {dates.map((date) => (\r\n                <td key={date}>\r\n                  {['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00'].map((time) => (\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      id={`default-${date}-${time}`}\r\n                      label={time}\r\n                      onChange={(e) => handleTimeChange(date, time, e.target.checked)}\r\n                      checked={schedules[date]?.includes(time) || false}\r\n                    />\r\n                  ))}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <Button variant=\"success\" onClick={submitSchedule}>\r\n          Submit Schedule\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddScheduleScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}