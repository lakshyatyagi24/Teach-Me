{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oreld\\\\git\\\\Teach-Me\\\\frontend\\\\src\\\\screens\\\\HomeScreen.js\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Course from \"../components/Course\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listCourses } from \"../actions/courseActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomeScreen = () => {\n  _s();\n  const keyword = match.params.keyword;\n  const dispatch = useDispatch();\n  const courseList = useSelector(state => state.courseList);\n  const {\n    loading,\n    error,\n    courses\n  } = courseList;\n\n  //whatever we put inisde the useEffect func will run when the HomeScreen component loads\n  //what we want is that our coreses loads to the screen\n  useEffect(() => {\n    dispatch(listCourses(keyword));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Our Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: courses.map(course => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(Course, {\n          course: course\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, course._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(HomeScreen, \"c8gmazgRhpTPJsYESAXKeyERrKk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Row","Col","Course","Message","Loader","listCourses","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","_s","keyword","match","params","dispatch","courseList","state","loading","error","courses","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","course","sm","md","lg","xl","_id","_c","$RefreshReg$"],"sources":["C:/Users/oreld/git/Teach-Me/frontend/src/screens/HomeScreen.js"],"sourcesContent":["// eslint-disable-next-line\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Course from \"../components/Course\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listCourses } from \"../actions/courseActions\";\r\n\r\nconst HomeScreen = () => {\r\n  const keyword = match.params.keyword;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const courseList = useSelector((state) => state.courseList);\r\n  const { loading, error, courses } = courseList;\r\n\r\n  //whatever we put inisde the useEffect func will run when the HomeScreen component loads\r\n  //what we want is that our coreses loads to the screen\r\n  useEffect(() => {\r\n    dispatch(listCourses(keyword));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Our Courses</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {courses.map((course) => (\r\n            <Col key={course._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Course course={course} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC1C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAGC,KAAK,CAACC,MAAM,CAACF,OAAO;EAEpC,MAAMG,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,UAAU,GAAGjB,WAAW,CAAEkB,KAAK,IAAKA,KAAK,CAACD,UAAU,CAAC;EAC3D,MAAM;IAAEE,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGJ,UAAU;;EAE9C;EACA;EACAnB,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACV,WAAW,CAACO,OAAO,CAAC,CAAC;EAChC,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;EAEd,oBACER,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBP,OAAO,gBACNX,OAAA,CAACH,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACRN,KAAK,gBACPZ,OAAA,CAACJ,OAAO;MAACuB,OAAO,EAAC,QAAQ;MAAAL,QAAA,EAAEF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,gBAE3ClB,OAAA,CAACP,GAAG;MAAAqB,QAAA,EACDD,OAAO,CAACO,GAAG,CAAEC,MAAM,iBAClBrB,OAAA,CAACN,GAAG;QAAkB4B,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAX,QAAA,eAChDd,OAAA,CAACL,MAAM;UAAC0B,MAAM,EAAEA;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADlBG,MAAM,CAACK,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAACd,EAAA,CAhCID,UAAU;EAAA,QAGGZ,WAAW,EAETC,WAAW;AAAA;AAAAmC,EAAA,GAL1BxB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}