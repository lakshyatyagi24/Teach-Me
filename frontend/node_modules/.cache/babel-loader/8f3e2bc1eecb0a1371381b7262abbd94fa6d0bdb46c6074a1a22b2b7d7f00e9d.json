{"ast":null,"code":"// eslint-disable-next-line\nimport React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{Row,Col}from\"react-bootstrap\";import Course from\"../components/Course\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import{listCourses}from\"../actions/courseActions\";import{Link,useParams}from\"react-router-dom\";// Import useParams to get the keyword from the URL\nimport Meta from\"../components/Meta.js\";import CourseCarousel from\"../components/CourseCarousel.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const HomeScreen=_ref=>{let{match}=_ref;const{keyword}=useParams();// Use useParams to get the keyword from the URL\n// const keyword = match.params.keyword;\nconst dispatch=useDispatch();const courseList=useSelector(state=>state.courseList);const{loading,error,courses}=courseList;//whatever we put inisde the useEffect func will run when the HomeScreen component loads\n//what we want is that our coreses loads to the screen\nuseEffect(()=>{dispatch(listCourses(keyword));},[dispatch,keyword]);// Add keyword to dependency array\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Meta,{}),!keyword?/*#__PURE__*/_jsx(CourseCarousel,{}):/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-light\",children:\"Go Back \"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Our Courses\"}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsx(Row,{children:courses.map(course=>/*#__PURE__*/_jsx(Col,{sm:12,md:6,lg:4,xl:3,children:/*#__PURE__*/_jsx(Course,{course:course})},course._id))})]});};export default HomeScreen;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Row","Col","Course","Message","Loader","listCourses","Link","useParams","Meta","CourseCarousel","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","HomeScreen","_ref","match","keyword","dispatch","courseList","state","loading","error","courses","children","to","className","variant","map","course","sm","md","lg","xl","_id"],"sources":["C:/Users/oreld/git/Teach-Me/frontend/src/screens/HomeScreen.js"],"sourcesContent":["// eslint-disable-next-line\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Course from \"../components/Course\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listCourses } from \"../actions/courseActions\";\r\nimport { Link, useParams } from \"react-router-dom\"; // Import useParams to get the keyword from the URL\r\nimport Meta from \"../components/Meta.js\";\r\nimport CourseCarousel from \"../components/CourseCarousel.js\";\r\n\r\nconst HomeScreen = ({match}) => {\r\n  const { keyword } = useParams(); // Use useParams to get the keyword from the URL\r\n  // const keyword = match.params.keyword;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const courseList = useSelector((state) => state.courseList);\r\n  const { loading, error, courses } = courseList;\r\n\r\n  //whatever we put inisde the useEffect func will run when the HomeScreen component loads\r\n  //what we want is that our coreses loads to the screen\r\n  useEffect(() => {\r\n    dispatch(listCourses(keyword));\r\n  }, [dispatch , keyword]); // Add keyword to dependency array\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? <CourseCarousel/> : <Link to='/' className='btn btn-light'>Go Back </Link> }\r\n      <h1>Our Courses</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {courses.map((course) => (\r\n            <Col key={course._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Course course={course} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,GAAG,CAAEC,GAAG,KAAQ,iBAAiB,CAC1C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAC3C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,OAASC,WAAW,KAAQ,0BAA0B,CACtD,OAASC,IAAI,CAAEC,SAAS,KAAQ,kBAAkB,CAAE;AACpD,MAAO,CAAAC,IAAI,KAAM,uBAAuB,CACxC,MAAO,CAAAC,cAAc,KAAM,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7D,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAa,IAAZ,CAACC,KAAK,CAAC,CAAAD,IAAA,CACzB,KAAM,CAAEE,OAAQ,CAAC,CAAGZ,SAAS,CAAC,CAAC,CAAE;AACjC;AAEA,KAAM,CAAAa,QAAQ,CAAGtB,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAuB,UAAU,CAAGtB,WAAW,CAAEuB,KAAK,EAAKA,KAAK,CAACD,UAAU,CAAC,CAC3D,KAAM,CAAEE,OAAO,CAAEC,KAAK,CAAEC,OAAQ,CAAC,CAAGJ,UAAU,CAE9C;AACA;AACAxB,SAAS,CAAC,IAAM,CACduB,QAAQ,CAACf,WAAW,CAACc,OAAO,CAAC,CAAC,CAChC,CAAC,CAAE,CAACC,QAAQ,CAAGD,OAAO,CAAC,CAAC,CAAE;AAE1B,mBACEJ,KAAA,CAAAF,SAAA,EAAAa,QAAA,eACEf,IAAA,CAACH,IAAI,GAAE,CAAC,CACP,CAACW,OAAO,cAAGR,IAAA,CAACF,cAAc,GAAC,CAAC,cAAGE,IAAA,CAACL,IAAI,EAACqB,EAAE,CAAC,GAAG,CAACC,SAAS,CAAC,eAAe,CAAAF,QAAA,CAAC,UAAQ,CAAM,CAAC,cACtFf,IAAA,OAAAe,QAAA,CAAI,aAAW,CAAI,CAAC,CACnBH,OAAO,cACNZ,IAAA,CAACP,MAAM,GAAE,CAAC,CACRoB,KAAK,cACPb,IAAA,CAACR,OAAO,EAAC0B,OAAO,CAAC,QAAQ,CAAAH,QAAA,CAAEF,KAAK,CAAU,CAAC,cAE3Cb,IAAA,CAACX,GAAG,EAAA0B,QAAA,CACDD,OAAO,CAACK,GAAG,CAAEC,MAAM,eAClBpB,IAAA,CAACV,GAAG,EAAkB+B,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cAChDf,IAAA,CAACT,MAAM,EAAC6B,MAAM,CAAEA,MAAO,CAAE,CAAC,EADlBA,MAAM,CAACK,GAEZ,CACN,CAAC,CACC,CACN,EACD,CAAC,CAEP,CAAC,CAED,cAAe,CAAApB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}