{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oreld\\\\git\\\\Teach-Me\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserEditScreen = () => {\n  _s();\n  const {\n    userId\n  } = useParams(); //useParams is a hook that allows you to access the URL parameters\n  //const userId = match.params.id;\n  // Hooks for navigation and accessing URL parameters\n  const navigate = useNavigate();\n  //const { search } = useLocation();\n\n  // State for form inputs\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"student\"); // Default to \"student\"\n\n  // Redux hooks for state management and dispatching actions\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n\n  // useEffect to handle redirection post-login based on \"userInfo\" state\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      navigate(\"/admin/userlist\");\n    } else {\n      if (!user || !user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setRole(user.isAdmin ? \"admin\" : \"student\");\n      }\n    }\n  }, [dispatch, userId, user, navigate, successUpdate]);\n\n  // Handler for form submission\n  const submitHandler = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin: role === \"admin\"\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      className: \"py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"py-3\",\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 31\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              margin: \"10px\"\n            },\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              margin: \"10px\"\n            },\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              margin: \"10px\"\n            },\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              margin: \"10px\"\n            },\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: role === \"admin\",\n            onChange: e => setRole(e.target.checked ? \"admin\" : \"student\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          style: {\n            margin: \"10px\"\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(UserEditScreen, \"oV0sAspQjQrrrvsmAcCy6IKsTkU=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = UserEditScreen;\nexport default UserEditScreen;\nvar _c;\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useNavigate","useParams","Button","Form","useSelector","useDispatch","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","jsxDEV","_jsxDEV","Fragment","_Fragment","UserEditScreen","_s","userId","navigate","name","setName","email","setEmail","role","setRole","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","_id","isAdmin","submitHandler","e","preventDefault","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","style","margin","Control","placeholder","value","onChange","target","Check","label","checked","_c","$RefreshReg$"],"sources":["C:/Users/oreld/git/Teach-Me/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate , useParams} from \"react-router-dom\";\r\nimport {  Button, Form } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails , updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = () => {\r\n\r\n    const { userId } = useParams();   //useParams is a hook that allows you to access the URL parameters\r\n    //const userId = match.params.id;\r\n    // Hooks for navigation and accessing URL parameters\r\n    const navigate = useNavigate();\r\n    //const { search } = useLocation();\r\n\r\n    // State for form inputs\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [role, setRole] = useState(\"student\"); // Default to \"student\"\r\n\r\n\r\n    // Redux hooks for state management and dispatching actions\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = userUpdate;\r\n\r\n    // useEffect to handle redirection post-login based on \"userInfo\" state\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            navigate(\"/admin/userlist\");\r\n        } else {\r\n            if (!user || !user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setRole(user.isAdmin ? \"admin\" : \"student\");\r\n            }\r\n        }\r\n    }, [dispatch, userId, user, navigate, successUpdate]);\r\n\r\n    // Handler for form submission\r\n    const submitHandler = (e) => {\r\n        e.preventDefault(); // Prevent default form submission behavior\r\n        dispatch(updateUser({ _id: userId, name, email  , isAdmin: role === \"admin\" }));\r\n    };\r\n\r\n  return (\r\n    <>\r\n        <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer className=\"py-3\">\r\n            <h1 className=\"py-3\">Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> :(\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label style={{ margin: \"10px\" }}>Name</Form.Label>\r\n                    <Form.Control\r\n                    style={{ margin: \"10px\" }}\r\n                    type=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label style={{ margin: \"10px\" }}>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    style={{ margin: \"10px\" }}\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"isadmin\">\r\n                    <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Is Admin\"\r\n                    checked={role === \"admin\"}\r\n                    onChange={(e) => setRole(e.target.checked ? \"admin\" : \"student\")}\r\n                    ></Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\" style={{ margin: \"10px\" }}>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            )}\r\n        </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAGC,SAAS,QAAO,kBAAkB;AAC5E,SAAUC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,cAAc,EAAGC,UAAU,QAAQ,wBAAwB;AACpE,SAASC,iBAAiB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM;IAAEC;EAAO,CAAC,GAAGjB,SAAS,CAAC,CAAC,CAAC,CAAG;EAClC;EACA;EACA,MAAMkB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B;;EAEA;EACA,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,IAAI,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;;EAG7C;EACA,MAAM8B,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAC9B,MAAMsB,WAAW,GAAGvB,WAAW,CAAEwB,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC;EAC7D,MAAM;IAAEE,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGJ,WAAW;EAE5C,MAAMK,UAAU,GAAG5B,WAAW,CAAEwB,KAAK,IAAKA,KAAK,CAACI,UAAU,CAAC;EAC3D,MAAM;IACFH,OAAO,EAAEI,aAAa;IACtBH,KAAK,EAAEI,WAAW;IAClBC,OAAO,EAAEC;EACb,CAAC,GAAGJ,UAAU;;EAEd;EACAnC,SAAS,CAAC,MAAM;IACZ,IAAIuC,aAAa,EAAE;MACfV,QAAQ,CAAC;QAAEW,IAAI,EAAE1B;MAAkB,CAAC,CAAC;MACrCQ,QAAQ,CAAC,iBAAiB,CAAC;IAC/B,CAAC,MAAM;MACH,IAAI,CAACY,IAAI,IAAI,CAACA,IAAI,CAACX,IAAI,IAAIW,IAAI,CAACO,GAAG,KAAKpB,MAAM,EAAE;QAC5CQ,QAAQ,CAACjB,cAAc,CAACS,MAAM,CAAC,CAAC;MACpC,CAAC,MAAM;QACHG,OAAO,CAACU,IAAI,CAACX,IAAI,CAAC;QAClBG,QAAQ,CAACQ,IAAI,CAACT,KAAK,CAAC;QACpBG,OAAO,CAACM,IAAI,CAACQ,OAAO,GAAG,OAAO,GAAG,SAAS,CAAC;MAC/C;IACJ;EACJ,CAAC,EAAE,CAACb,QAAQ,EAAER,MAAM,EAAEa,IAAI,EAAEZ,QAAQ,EAAEiB,aAAa,CAAC,CAAC;;EAErD;EACA,MAAMI,aAAa,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpBhB,QAAQ,CAAChB,UAAU,CAAC;MAAE4B,GAAG,EAAEpB,MAAM;MAAEE,IAAI;MAAEE,KAAK;MAAIiB,OAAO,EAAEf,IAAI,KAAK;IAAQ,CAAC,CAAC,CAAC;EACnF,CAAC;EAEH,oBACEX,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACI9B,OAAA,CAACf,IAAI;MAAC8C,EAAE,EAAC,iBAAiB;MAACC,SAAS,EAAC,oBAAoB;MAAAF,QAAA,EAAC;IAE1D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACPpC,OAAA,CAACL,aAAa;MAACqC,SAAS,EAAC,MAAM;MAAAF,QAAA,gBAC3B9B,OAAA;QAAIgC,SAAS,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClChB,aAAa,iBAAIpB,OAAA,CAACN,MAAM;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3Bf,WAAW,iBAAIrB,OAAA,CAACP,OAAO;QAAC4C,OAAO,EAAC,QAAQ;QAAAP,QAAA,EAAET;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,EAChEpB,OAAO,gBAAGhB,OAAA,CAACN,MAAM;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAGnB,KAAK,gBAAGjB,OAAA,CAACP,OAAO;QAAC4C,OAAO,EAAC,QAAQ;QAAAP,QAAA,EAAEb;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,gBAC3EpC,OAAA,CAACV,IAAI;QAACgD,QAAQ,EAAEX,aAAc;QAAAG,QAAA,gBAC1B9B,OAAA,CAACV,IAAI,CAACiD,KAAK;UAACC,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACxB9B,OAAA,CAACV,IAAI,CAACmD,KAAK;YAACC,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAO,CAAE;YAAAb,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACxDpC,OAAA,CAACV,IAAI,CAACsD,OAAO;YACbF,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAO,CAAE;YAC1BnB,IAAI,EAAC,MAAM;YACXqB,WAAW,EAAC,YAAY;YACxBC,KAAK,EAAEvC,IAAK;YACZwC,QAAQ,EAAGnB,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACoB,MAAM,CAACF,KAAK;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACbpC,OAAA,CAACV,IAAI,CAACiD,KAAK;UAACC,SAAS,EAAC,OAAO;UAAAV,QAAA,gBACzB9B,OAAA,CAACV,IAAI,CAACmD,KAAK;YAACC,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAO,CAAE;YAAAb,QAAA,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjEpC,OAAA,CAACV,IAAI,CAACsD,OAAO;YACbF,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAO,CAAE;YAC1BnB,IAAI,EAAC,OAAO;YACZqB,WAAW,EAAC,aAAa;YACzBC,KAAK,EAAErC,KAAM;YACbsC,QAAQ,EAAGnB,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACoB,MAAM,CAACF,KAAK;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eAEbpC,OAAA,CAACV,IAAI,CAACiD,KAAK;UAACC,SAAS,EAAC,SAAS;UAAAV,QAAA,eAC3B9B,OAAA,CAACV,IAAI,CAAC2D,KAAK;YACXzB,IAAI,EAAC,UAAU;YACf0B,KAAK,EAAC,UAAU;YAChBC,OAAO,EAAExC,IAAI,KAAK,OAAQ;YAC1BoC,QAAQ,EAAGnB,CAAC,IAAKhB,OAAO,CAACgB,CAAC,CAACoB,MAAM,CAACG,OAAO,GAAG,OAAO,GAAG,SAAS;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEbpC,OAAA,CAACX,MAAM;UAACmC,IAAI,EAAC,QAAQ;UAACa,OAAO,EAAC,SAAS;UAACK,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAO,CAAE;UAAAb,QAAA,EAAC;QAEnE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA,eAClB,CAAC;AAEP,CAAC;AAAChC,EAAA,CAjGID,cAAc;EAAA,QAEGf,SAAS,EAGXD,WAAW,EAUXK,WAAW,EACRD,WAAW,EAGZA,WAAW;AAAA;AAAA6D,EAAA,GAnB5BjD,cAAc;AAmGpB,eAAeA,cAAc;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}