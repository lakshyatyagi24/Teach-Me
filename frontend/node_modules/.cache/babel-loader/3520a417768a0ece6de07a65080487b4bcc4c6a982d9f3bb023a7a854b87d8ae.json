{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilanv\\\\OneDrive\\\\Documents\\\\GitHub\\\\Teach-Me\\\\frontend\\\\src\\\\screens\\\\HomeScreen.js\";\n// eslint-disable-next-line\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Course from \"../components/Course\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomeScreen = () => {\n  // const [courses, setCourses] = useState([]);\n\n  // //whatever we put inisde the useEffect func will run when the HomeScreen component loads\n  // //what we want is that our coreses loads to the screen\n  // useEffect(() => {\n  //   const fetchCourses = async () => {\n  //     const { data } = await axios.get(\"/api/courses\");\n  //     setCourses(data);\n  //   };\n  //   fetchCourses();\n  // },[]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Our Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: courses.map(course => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(Course, {\n          course: course\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, course._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Course","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","children","fileName","_jsxFileName","lineNumber","columnNumber","courses","map","course","sm","md","lg","xl","_id","_c","$RefreshReg$"],"sources":["C:/Users/ilanv/OneDrive/Documents/GitHub/Teach-Me/frontend/src/screens/HomeScreen.js"],"sourcesContent":["// eslint-disable-next-line\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Course from \"../components/Course\";\r\nimport axios from 'axios'\r\n\r\nconst HomeScreen = () => {\r\n  // const [courses, setCourses] = useState([]);\r\n\r\n  // //whatever we put inisde the useEffect func will run when the HomeScreen component loads\r\n  // //what we want is that our coreses loads to the screen\r\n  // useEffect(() => {\r\n  //   const fetchCourses = async () => {\r\n  //     const { data } = await axios.get(\"/api/courses\");\r\n  //     setCourses(data);\r\n  //   };\r\n  //   fetchCourses();\r\n  // },[]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Our Courses</h1>\r\n      <Row>\r\n        {courses.map((course) => (\r\n          <Col key={course._id} sm={12} md={6} lg={4} xl={3}>\r\n            <Course course={course} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC1C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBR,OAAA,CAACL,GAAG;MAAAS,QAAA,EACDK,OAAO,CAACC,GAAG,CAAEC,MAAM,iBAClBX,OAAA,CAACJ,GAAG;QAAkBgB,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAX,QAAA,eAChDJ,OAAA,CAACH,MAAM;UAACc,MAAM,EAAEA;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADlBG,MAAM,CAACK,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACS,EAAA,GAzBId,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}