{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const registerTeacher = createAsyncThunk('user/userRegisterTeacher', async ({\n  name,\n  email,\n  password,\n  farmName,\n  image\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/teacher', {\n      name,\n      email,\n      password,\n      farmName,\n      image\n    }, config);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});","map":{"version":3,"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","axios","createAsyncThunk","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","registerTeacher","farmName","image","rejectWithValue"],"sources":["C:/Users/oreld/git/Teach-Me/frontend/src/actions/userActions.js"],"sourcesContent":["import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport {  createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n  }\r\n};\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({type: USER_LOGOUT})\r\n}\r\n\r\nexport const register = (name ,email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      {name , email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch,getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {userLogin : {userInfo} }  = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization : `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/users/${id}`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch,getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {userLogin : {userInfo} }  = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization : `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/profile`,user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_UPDATE_PROFILE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n  }\r\n};\r\n\r\nexport const registerTeacher = createAsyncThunk(\r\n  'user/userRegisterTeacher',\r\n  async ({ name, email, password, farmName, image }, { rejectWithValue }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        '/api/users/register/teacher',\r\n        { name, email, password, farmName, image },\r\n        config\r\n      );\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      return data;\r\n    } catch (error) {\r\n      if (error.response && error.response.data.message) {\r\n        return rejectWithValue(error.response.data.message);\r\n      } else {\r\n        return rejectWithValue(error.message);\r\n      }\r\n    }\r\n  }\r\n);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}