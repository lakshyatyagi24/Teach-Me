{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oreld\\\\git\\\\Teach-Me\\\\frontend\\\\src\\\\screens\\\\ScheduleScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScheduleScreen = () => {\n  _s();\n  const [slots, setSlots] = useState([]);\n  const [teacherName, setTeacherName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    courseId,\n    teacherId\n  } = useParams();\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      if (userInfo) {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        };\n        try {\n          setLoading(true);\n          const {\n            data\n          } = await axios.get(`/api/schedule/${courseId}/${teacherId}`, config);\n          // Check if the data is an array and has at least one schedule\n          if (Array.isArray(data) && data.length > 0) {\n            setScheduleData(data);\n          } else {\n            // If data is empty or not in expected format, set an error message\n            setError('No schedule available.');\n          }\n        } catch (err) {\n          setError(err.response && err.response.data.message ? err.response.data.message : err.message);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchSchedule();\n  }, [courseId, teacherId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Schedule for \", teacherName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date / Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), scheduleData.dates.map((date, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: date\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: scheduleData.times.map((time, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), scheduleData.dates.map((date, dateIndex) => {\n              var _scheduleData$booking;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_scheduleData$booking = scheduleData.bookings[date]) !== null && _scheduleData$booking !== void 0 && _scheduleData$booking.includes(time) ? 'Booked' : 'Available'\n              }, `${date}-${time}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this);\n            })]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ScheduleScreen, \"HNuWGvTIgLkp6NCWyL6FfCJcKJQ=\", false, function () {\n  return [useParams];\n});\n_c = ScheduleScreen;\nexport default ScheduleScreen;\nvar _c;\n$RefreshReg$(_c, \"ScheduleScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ScheduleScreen","_s","slots","setSlots","teacherName","setTeacherName","loading","setLoading","error","setError","courseId","teacherId","fetchSchedule","userInfo","JSON","parse","localStorage","getItem","config","headers","Authorization","token","data","get","Array","isArray","length","setScheduleData","err","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","scheduleData","dates","map","date","index","times","time","dateIndex","_scheduleData$booking","bookings","includes","_c","$RefreshReg$"],"sources":["C:/Users/oreld/git/Teach-Me/frontend/src/screens/ScheduleScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst ScheduleScreen = () => {\r\n    const [slots, setSlots] = useState([]);\r\n    const [teacherName, setTeacherName] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const { courseId, teacherId } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchSchedule = async () => {\r\n          const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n          if (userInfo) {\r\n            const config = {\r\n              headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n              },\r\n            };\r\n            try {\r\n              setLoading(true);\r\n              const { data } = await axios.get(`/api/schedule/${courseId}/${teacherId}`, config);\r\n              // Check if the data is an array and has at least one schedule\r\n              if (Array.isArray(data) && data.length > 0) {\r\n                setScheduleData(data);\r\n              } else {\r\n                // If data is empty or not in expected format, set an error message\r\n                setError('No schedule available.');\r\n              }\r\n            } catch (err) {\r\n              setError(err.response && err.response.data.message ? err.response.data.message : err.message);\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        };\r\n      \r\n        fetchSchedule();\r\n      }, [courseId, teacherId]);\r\n      \r\n\r\n    return (\r\n        <div className=\"schedule-container\">\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : error ? (\r\n                <p>Error: {error}</p>\r\n            ) : (\r\n                <>\r\n                    <h2>Schedule for {teacherName}</h2>\r\n                    <Table striped bordered hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date / Time</th>\r\n                            {scheduleData.dates.map((date, index) => (\r\n                            <th key={index}>{date}</th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {scheduleData.times.map((time, index) => (\r\n                            <tr key={index}>\r\n                            <td>{time}</td>\r\n                            {scheduleData.dates.map((date, dateIndex) => (\r\n                                <td key={`${date}-${time}`}>\r\n                                {scheduleData.bookings[date]?.includes(time) ? 'Booked' : 'Available'}\r\n                                </td>\r\n                            ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScheduleScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}